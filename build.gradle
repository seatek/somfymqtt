/*buildscript {
  repositories {
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2" }
  }
  dependencies {
    classpath "org.openapitools:openapi-generator-gradle-plugin:5.0.0"
  }
}*/

plugins {
	id 'java'
	id "eclipse"
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.openapi.generator" version "6.5.0"
	 //   id 'com.bmuschko.docker-remote-api' version '6.7.0'
	 id 'com.bmuschko.docker-java-application' version '6.7.0'
}

group = 'net.seatek.home.somfy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'build/generated/src/main/java'
        }
    }
 }

repositories {
	mavenCentral()
}


ext {
    jackson_version = "2.14.1"
    jackson_databind_version = "2.14.1"
    jackson_databind_nullable_version = "0.2.6"
   // spring_web_version = "5.3.24"
 //   jakarta_annotation_version = "1.3.5"
    jodatime_version = "2.9.9"
    junit_version = "4.13.2"
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-artemis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


  implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.springframework:spring-web"
    implementation "org.springframework:spring-context"
//implementation "org.springframework.integration:spring-integration-mqtt"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider"
    implementation "org.openapitools:jackson-databind-nullable:0.2.6"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "jakarta.annotation:jakarta.annotation-api"
// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

implementation "org.eclipse.paho:org.eclipse.paho.mqttv5.client:1.2.5"
// https://mvnrepository.com/artifact/io.github.boc-tothefuture/kotlin-homie
//implementation 'io.github.boc-tothefuture:kotlin-homie:0.0.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.somfy.tahoma.api"
    invokerPackage = "com.somfy.tahoma.invoker"
    modelPackage = "com.somfy.tahoma.model"
    configOptions.putAll([
        dateLibrary: "java8",
        library: "resttemplate",
        useJakartaEe: "true",
        additionalModelTypeAnnotations: "@lombok.Data;@lombok.Builder;@lombok.AllArgsConstructor"
    ])
}
/*
task createDockerfile(type: Dockerfile) {
    from 'openjdk:17-alpine'
   
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    images.add('net.seatek.home/somfyMqtt:latest')
}*/



docker {
    javaApplication {
        baseImage = 'openjdk:17-alpine'
       // maintainer = 'Benjamin Muschko "benjamin.muschko@gmail.com"'
        ports = [9090, 5701]
        images = ['net.seatek.home/somfyMqtt:latest']
        jvmArgs = ['-Xms256m', '-Xmx2048m']
    }
}

